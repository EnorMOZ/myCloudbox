---
- name: Import proxy.conf
  copy: "src=proxy.conf dest=/opt/nginx-proxy/proxy.conf force=yes owner={{user}} group={{user}} mode=0775"

- name: Stop and remove any existing container
  docker_container:
    name: nginx-proxy
    state: absent

- name: Stop and remove any existing letsencrypt container
  docker_container:
    name: letsencrypt
    state: absent

- name: Setup default nginx-proxy docker volume to be merged
  set_fact:
    nginx_proxy_volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "{{mnt.docker_data}}/nginx-proxy:/etc/nginx/certs:ro"
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "{{mnt.docker_data}}/nginx-proxy/htpasswd:/etc/nginx/htpasswd"
      - "/etc/nginx/vhost.d"
      - "/usr/share/nginx/html"

- name: Create and start container
  docker_container:
    name: nginx-proxy
    image: "jwilder/nginx-proxy"
    pull: yes
    published_ports:
      - "80:80"
      - "443:443"
    volumes: "{{nginx_proxy_volumes + docker_volumes.nginx_proxy|default([])}}"
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    networks:
      - name: cloudbox
        ipv4_address: 172.18.0.6
        aliases:
          - nginx-proxy
    restart_policy: always
    state: started

- name: Setup default letsencrypt docker volume to be merged
  set_fact:
    letsencrypt_volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "{{mnt.docker_data}}/nginx-proxy:/etc/nginx/certs:rw"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

- name: Create and start letsencrypt container
  docker_container:
    name: letsencrypt
    image: "jrcs/letsencrypt-nginx-proxy-companion"
    volumes: "{{letsencrypt_volumes + docker_volumes.letsencrypt|default([])}}"
    volumes_from:
      - "nginx-proxy"
    env:
      DEBUG: true
    networks:
      - name: cloudbox
        ipv4_address: 172.18.0.19
        aliases:
          - letsencrypt
    restart_policy: always
    state: started

- include: htauth.yml
  when: http_auth.enable == "True"
