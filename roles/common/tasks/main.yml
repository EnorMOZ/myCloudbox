---
  - name: "Get {{user}} uid"
    shell: "id -u {{user}}"
    register: uid

  - name: "Get {{user}} gid"
    shell: "id -g {{user}}"
    register: gid
      
  - name: Install common packages
    apt: "name={{item}} state=installed"
    with_items:
      - unrar
      - unzip
      - p7zip
      - python-pip
      - python3-pip
      - python-passlib
      - curl
      - sqlite3
      - vnstat
      - tree
      - lsof
      - man-db
      - ksmtuned
      - git
      - pwgen
      - rsync
      - logrotate
      - htop
      - iotop
      - nload
      - fail2ban
      - ufw
      - ncdu
      - speedtest-cli
      
  - name: Install common pip modules
    pip: "name={{item}} state=latest"
    with_items:
      - docker-py
      - certbot
      - lxml
      - pyOpenSSL

  - name: Create common directories
    file: "path={{item}} state=directory mode=0775 owner={{user}} group={{user}}"
    with_items:
      - "{{mnt.local}}"
      - "{{mnt.unionfs}}"
      - "{{mnt.fuse_dir}}"
      - "{{mnt.docker_data}}"
      - "{{mnt.docker_data}}/plexdrive"
      - "{{mnt.docker_data}}/sonarr"
      - "{{mnt.docker_data}}/radarr"
      - "{{mnt.docker_data}}/nzbget"
      - "{{mnt.docker_data}}/nzbget/scripts"
      - "{{mnt.docker_data}}/rutorrent"
      - "{{mnt.docker_data}}/jackett"
      - "{{mnt.docker_data}}/nzbhydra"
      - "{{mnt.docker_data}}/plex"
      - "{{mnt.docker_data}}/plexpy"
      - "{{mnt.docker_data}}/plex_autoscan"
      - "{{mnt.docker_data}}/unionfs_cleaner"
      - "{{mnt.docker_data}}/rclone"
      - "{{mnt.docker_data}}/nginx-proxy"
      - "{{mnt.docker_data}}/plexrequests"
      - "{{mnt.docker_data}}/organizr"
      - "{{mnt.docker_data}}/portainer"
      - "{{mnt.docker_data}}/scripts"
      - "{{mnt.docker_data}}/scripts/torrent"
      - "{{mnt.docker_data}}/scripts/nzb"
      - "{{mnt.docker_data}}/scripts/nginx"
      - "{{mnt.docker_data}}/scripts/plex"
      - "/home/{{user}}/.config/rclone"
      - "{{mnt.docker_data}}/znc"
      - "{{plex.transcodes}}"

      
  - name: Check plexdrive mount folder exist
    stat:
      path: "{{mnt.plexdrive}}"
    register: plexdrive_mnt

  - name: Create {{mnt.plexdrive}}
    file:
      path: "{{mnt.plexdrive}}"
      state: directory
      mode: 0755
      owner: "{{user}}"
      group: "{{user}}"
      recurse: true
    when: plexdrive_mnt.stat.exists == False

  - name: custom updatedb file 
    template: 
      src=updatedb.conf
      dest=/etc/updatedb.conf
      owner=root
      group=root
      mode=0644 
      
  - include: plexauth.yml
    tags: plexauth     
