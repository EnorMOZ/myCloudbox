---
- name: "Get {{user}} uid"
  shell: "id -u {{user}}"
  register: uid

- name: "Get {{user}} gid"
  shell: "id -g {{user}}"
  register: gid

- name: Install common packages
  apt: "name={{item}} state=installed"
  with_items:
    - unrar
    - unzip
    - p7zip
    - python-pip
    - python3-pip
    - python-passlib
    - curl
    - sqlite3
    - vnstat
    - tree
    - lsof
    - man-db
    - ksmtuned
    - git
    - pwgen
    - rsync
    - logrotate
    - htop
    - iotop
    - nload
    - fail2ban
    - ufw
    - ncdu
    - mc
    - speedtest-cli
    - python-ndg-httpsclient
    - nethogs
    - nodejs-legacy
    - npm
    - glances

- name: Install common pip modules
  pip: "name={{item}} state=latest"
  with_items:
    - docker-py
    - certbot
    - "ansible-toolbox"

- name: Install common npm modules
  npm: "name={{item}} global=yes"
  with_items:
    - frontail

- name: Install hostess
  get_url:
    url:  https://github.com/cbednarski/hostess/releases/download/v0.2.0/hostess_linux_amd64
    dest: /usr/local/bin/hostess
    mode: 0755
    owner: root
    group: root
    force: yes
    validate_certs: no

- name: Install ngrok
  unarchive:
    src: https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
    dest: /usr/local/bin
    copy: no
    mode: 0775
    validate_certs: no

- name: Create common directories
  file: "path={{item}} state=directory mode=0775 owner={{user}} group={{user}}"
  with_items:
    - "{{mnt.local}}"
    - "{{mnt.unionfs}}"
    - "{{mnt.fuse_dir}}"
    - "{{mnt.docker_data}}"
    - "{{mnt.docker_data}}/scripts"
    - "{{mnt.docker_data}}/torrent"
    - "{{mnt.docker_data}}/scripts/nzb"
    - "{{mnt.docker_data}}/nginx"
    - "{{mnt.docker_data}}/plex"
    - "{{mnt.docker_data}}/plex_autoscan"
    - "{{mnt.docker_data}}/cloudflare"
    - "{{mnt.docker_data}}/docker"
    - "{{mnt.docker_data}}/frontail"
    
- name: custom updatedb file 
  template: 
    src=updatedb.conf
    dest=/etc/updatedb.conf
    owner=root
    group=root
    mode=0644 
    
- name: Set {{mnt.docker_data}} permissions
  shell: "chmod -R 775 {{mnt.docker_data}}"

- name: Set {{mnt.docker_data}} owner
  shell: "chown -R {{user}}:{{user}}{{mnt.docker_data}}"  
  
- name: insert custom bashrc stuff
  blockinfile:
    path: "{{ ansible_env.HOME }}/.bashrc"
    block: |
        HISTTIMEFORMAT="%h/%d - %H:%M:%S "
        shopt -s histappend
        PROMPT_COMMAND="history -a;$PROMPT_COMMAND"
        if [ $UID -eq "0" ]; then
        HISTFILE=/root/.bash_history-$(who am i | awk '{print $1}';exit)
        else
        HISTFILE=$HOME/.bash_history
        fi
        export EDITOR="/bin/nano"

- include: plexauth.yml
  tags: plexauth
   
- include: plexsections.yml
  tags: plexsections 

- include: cloudflare.yml
  tags: cloudflare 

- name: Check plexdrive mount folder exist
  stat:
    path: "{{mnt.plexdrive}}"
  register: plexdrive_mnt

- name: Create "{{mnt.plexdrive}}"
  file:
    path: "{{mnt.plexdrive}}"
    state: directory
    mode: 0755
    owner: "{{user}}"
    group: "{{user}}"
    recurse: true
  when: plexdrive_mnt.stat.exists == False

