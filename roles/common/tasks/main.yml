---
  
- name: Ensure using kernel 4.10 or newer
  fail: msg="You must be using kernel 4.10.0-32-generic or newer!"
  when: ansible_kernel | version_compare('4.10', '<')

- name: Create common groups
  group: "name={{item}} state=present"
  with_items:
    - docker
    - "{{user}}"

- name: "Create user {{user}}"
  user:
    name: "{{user}}"
    group: "{{user}}"
    groups: "{{user}},docker,sudo"
    password: "{{ passwd |password_hash('sha512') }}"
    update_password: on_create
    append: yes
    shell: /bin/bash

- name: "Make cloudbox folder readable/writeable by {{user}}"
  file: "path={{playbook_dir}} state=directory mode=0775 owner={{user}} group={{user}} recurse=true"
    
- name: "Get {{user}} uid"
  shell: "id -u {{user}}"
  register: uid

- name: "Get {{user}} gid"
  shell: "id -g {{user}}"
  register: gid
    
- name: Install common packages
  apt: "name={{item}} state=installed"
  with_items:
    - unrar
    - unzip
    - p7zip
    - python-pip
    - python3-pip
    - python-passlib
    - curl
    - sqlite3
    - vnstat
    - tree
    - lsof
    - man-db
    - ksmtuned
    - git
    - pwgen
    - rsync
    - logrotate
    - htop
    - iotop
    - nload
    - fail2ban
    - ufw
    - ncdu
    - mc
    - speedtest-cli
    - python-ndg-httpsclient
    - nodejs-legacy
    - npm
    - glances
    - apt-utils
    - byobu
    - cpufrequtils

- name: Install common pip modules
  pip: "name={{item}} state=latest"
  with_items:
    - docker-py
    - certbot
    - ansible-toolbox
    - dnspython

- name: Create common directories
  file: "path={{item}} state=directory mode=0775 owner={{user}} group={{user}}"
  with_items:
    - "{{mnt.local}}"
    - "{{mnt.unionfs}}"
    - "{{mnt.fuse_dir}}"
    - "{{mnt.docker_data}}"
    
- name: custom updatedb file 
  template: 
    src=updatedb.conf
    dest=/etc/updatedb.conf
    owner=root
    group=root
    mode=0644 
    
- name: Set {{mnt.docker_data}} permissions
  shell: "chmod -R 775 {{mnt.docker_data}}"

- name: Set {{mnt.docker_data}} owner
  shell: "chown -R {{user}}:{{user}} {{mnt.docker_data}}"  
  
- name: insert custom bashrc stuff
  blockinfile:
    path: "{{ ansible_env.HOME }}/.bashrc"
    block: |
        HISTTIMEFORMAT="%h/%d - %H:%M:%S "
        shopt -s histappend
        PROMPT_COMMAND="history -a;$PROMPT_COMMAND"
        if [ $UID -eq "0" ]; then
        HISTFILE=/root/.bash_history-$(who am i | awk '{print $1}';exit)
        else
        HISTFILE=$HOME/.bash_history
        fi
        export EDITOR="/bin/nano"
        
- include_tasks: "roles/resource/system/tasks/main.yml"
  tags: system

- include_tasks: "roles/resource/disable_ipv6/tasks/main.yml"
  tags: disable_ipv6

- include_tasks: "roles/resource/motd/tasks/main.yml"
  tags: motd
    
- include_tasks: "roles/resource/apt-file/tasks/main.yml"
  tags: apt-file

- include_tasks: "roles/resource/unrarall/main.yml"
  tags: unrarall

- include_tasks: "roles/resource/nethogs/tasks/main.yml"
  tags: nethogs

- include_tasks: "roles/resource/gce/tasks/main.yml"
  tags: gce

- include_tasks: "roles/resource/rclone/tasks/main.yml"
  tags: rclone

- include_tasks: "roles/resource/plexdrive/tasks/main.yml"
  tags: plexdrive 

- include_tasks: "roles/resource/unionfs/tasks/main.yml"
  tags: unionfs 
    
- include_tasks: "roles/resource/plex_autoscan/tasks/main.yml"
  tags: plex_autoscan

- include_tasks: "roles/resource/unionfs_cleaner/tasks/main.yml"
  tags: unionfs_cleaner

- include_tasks: "roles/resource/cloudflare/tasks/main.yml"
  tags: cloudflare 

- include_tasks: "roles/resource/docker/tasks/main.yml"
  tags: docker
  
- include_tasks: "roles/resource/backup/tasks/main.yml"
  tags: backup

- include_tasks: "roles/resource/subliminal/tasks/main.yml"
  tags: subliminal   