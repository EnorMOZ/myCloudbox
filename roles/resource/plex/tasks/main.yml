---
  
- include_tasks: "{{roles_dir}}/resource/get-id/tasks/main.yml"

- name: Create plex directories
  file: "path={{item}} state=directory mode=0775 owner={{user}} group={{user}}"
  with_items:
    - "{{mnt.docker_data}}/plex"
    - "{{plex.transcodes}}"

- name: Stop and remove any existing container
  docker_container:
    name: plex
    state: absent

- name: Retrieve plex docker image
  docker_image:
    name: "plexinc/pms-docker:{{plex.tag}}"

- name: Check Preferences.xml exists
  stat:
    path: "{{mnt.docker_data}}/plex/Library/Application Support/Plex Media Server/Preferences.xml"
  register: plex_prefs

- name: Get plex server claim id
  uri:
    url: https://plex.tv/api/claim/token.json
    user: "{{plex.user}}"
    password: "{{plex.pass}}"
    force_basic_auth: yes
  register: plexclaim  
  when: plex_prefs.stat.exists == False

- name: set new claim token var
  set_fact: >
    plex_claim="{{plexclaim.json.token}}"
  when: plex_prefs.stat.exists == False  

- debug: msg="Using plex claim token {{plex_claim}}"
  when: plex_prefs.stat.exists == False

- name: Setup two lists to be merged
  set_fact:
    plex_volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "{{mnt.docker_data}}/plex:/config"
      - "{{plex.transcodes}}:/transcode"

- name: Create and start container
  docker_container:
    name: plex
    image: "plexinc/pms-docker:{{plex.tag}}"
    pull: yes
    published_ports:
      - "127.0.0.1:32400:32400/tcp"
      - "3005:3005/tcp"
      - "8324:8324/tcp"
      - "33400:33400/tcp"
      - "33443:33443/tcp"
    env:
      PLEX_UID: "{{uid.stdout}}"
      PLEX_GID: "{{gid.stdout}}"
      PLEX_CLAIM: "{{plex_claim| default (omit)}}"
      CHANGE_CONFIG_DIR_OWNERSHIP: false
      ADVERTISE_IP: "http://plex.{{domain}}:80/,https://plex.{{domain}}:443/"
      VIRTUAL_HOST: "plex.{{domain}}"
      VIRTUAL_PORT: 32400
      LETSENCRYPT_HOST: "plex.{{domain}}"
      LETSENCRYPT_EMAIL: "{{email}}"
    volumes: "{{plex_volumes + docker_volumes.plex|default([])}}"
    restart_policy: always
    devices: "{{ '/dev/dri:/dev/dri' if plex.hw_transcode == 'True' | default(false) else omit }}"
    etc_hosts: {'metric.plex.tv': '127.0.0.1', 'metrics.plex.tv': '127.0.0.1', 'analytics.plex.tv': '127.0.0.1'}
    networks:
      - name: cloudbox
        aliases:
          - plex
    state: started

# we need this here because sometimes after a restore, docker will set this transcodes folder to root, dont ask why, but it does...
- name: "Wait 5 seconds, then ensure {{plex.transcodes}} has the correct permissions"
  wait_for:
    timeout: 5

- name: "Ensure transcodes folder has the correct permissions"
  file:
    path: "{{plex.transcodes}}"
    owner: "{{user}}"
    group: "{{user}}"
    mode: 0775
    recurse: true

- name: Check WebTools exists
  stat:
    path: "{{mnt.docker_data}}/plex/Library/Application Support/Plex Media Server/Plug-ins/WebTools.bundle"
  register: webtools_bundle

- name: Wait for Plug-ins folder to be created by Plex
  wait_for:
    path: "{{mnt.docker_data}}/plex/Library/Application Support/Plex Media Server/Plug-ins"
    state: present
  when: webtools_bundle.stat.exists == False

- name: Install WebTools
  unarchive:
    src: https://github.com/ukdtom/WebTools.bundle/releases/download/3.0.0/WebTools.bundle.zip
    dest: "{{mnt.docker_data}}/plex/Library/Application Support/Plex Media Server/Plug-ins"
    copy: no
    owner: "{{user}}"
    group: "{{user}}"
    mode: 0775
    validate_certs: no
  when: webtools_bundle.stat.exists == False

- name: Create plex_autoscan Logs folder
  file:
    path: "{{mnt.docker_data}}/plex/Library/Logs/Plex Media Server"
    state: directory
    mode: 0775
    owner: "{{user}}"
    group: "{{user}}"
    
- name: add container to inventory
  add_host:
    name: plex
    ansible_connection: docker
  changed_when: false

- name: run command in container
  delegate_to: plex
  raw: apt-get update && apt-get install -y unrar
  become: False    
