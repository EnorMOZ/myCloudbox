---
- name: Check service exists
  stat:
    path: "/etc/systemd/system/unionfs_cleaner.service"
  register: unionfs_cleaner_service

- name: Stop existing unionfs_cleaner service
  systemd: state=stopped name=unionfs_cleaner
  when: unionfs_cleaner_service.stat.exists

- name: Clone unionfs_cleaner
  git:
    repo: https://github.com/enormoz/unionfs_cleaner/
    dest: "{{mnt.docker_data}}/unionfs_cleaner"
    version: master
    force: yes
    
- name: Install pip requirements
  pip:
    requirements: "{{mnt.docker_data}}/unionfs_cleaner/requirements.txt"
    executable: pip3

- name: Check config exists
  stat:
    path: "{{mnt.docker_data}}/unionfs_cleaner/config.json"
  register: unionfs_cleaner_config

- name: Import default config
  template:
    src: config.json.js2
    dest: "{{mnt.docker_data}}/unionfs_cleaner/config.json"
    force: yes
  when: unionfs_cleaner_config.stat.exists == False

- name: Set cleaner.py as executable
  file:
    path: "{{mnt.docker_data}}/unionfs_cleaner/cleaner.py"
    mode: a+x

- name: Set directory permissions
  file: "path={{mnt.docker_data}}/unionfs_cleaner state=directory owner={{user}} group={{user}} recurse=yes"

- name: Import unionfs_cleaner service
  template:
    src: unionfs_cleaner.service.js2
    dest: /etc/systemd/system/unionfs_cleaner.service 
    force: yes

- name: Start unionfs_cleaner service
  systemd: state=started name=unionfs_cleaner daemon_reload=yes enabled=yes
