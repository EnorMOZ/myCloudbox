---
- name: Stop and remove any existing container
  docker_container:
    name: plex
    state: absent

- name: Retrieve plex docker image
  docker_image:
    name: "plexinc/pms-docker:{{plex.tag}}"

- name: Check Preferences.xml exists
  stat:
    path: "{{mnt.docker_data}}/plex/Library/Application Support/Plex Media Server/Preferences.xml"
  register: plex_prefs

- name: Get plex server claim id
  uri:
    url: https://plex.tv/api/claim/token.json
    user: "{{plex.user}}"
    password: "{{plex.pass}}"
    force_basic_auth: yes
  register: plexclaim  
  when: plex_prefs.stat.exists == False

- name: set new claim token var
  set_fact: >
    plex_claim="{{plexclaim.json.token}}"
  when: plex_prefs.stat.exists == False  

- debug: msg="Using plex claim token {{plex_claim}}"
  when: plex_prefs.stat.exists == False

- name: Setup two lists to be merged
  set_fact:
    plex_volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "{{mnt.docker_data}}/plex:/config"
      - "{{plex.transcodes}}:/transcode"

- name: Create and start container
  docker_container:
    name: plex
    image: "plexinc/pms-docker:{{plex.tag}}"
    pull: yes
    published_ports:
      - "127.0.0.1:32400:32400/tcp"
      - "3005:3005/tcp"
      - "8324:8324/tcp"
      - "32469:32469/tcp"
      - "1900:1900/udp"
      - "32410:32410/udp"
      - "32412:32412/udp"
      - "32413:32413/udp"
      - "32414:32414/udp"
      - "33400:33400/tcp"
      - "33443:33443/tcp"
    env:
      PLEX_UID: "{{uid.stdout}}"
      PLEX_GID: "{{gid.stdout}}"
      PLEX_CLAIM: "{{plex_claim| default (omit)}}"
      CHANGE_CONFIG_DIR_OWNERSHIP: false
      ADVERTISE_IP: "http://plex.{{domain}}:80/,https://plex.{{domain}}:443/"
      VIRTUAL_HOST: "plex.{{domain}}"
      VIRTUAL_PORT: 32400
      LETSENCRYPT_HOST: "plex.{{domain}}"
      LETSENCRYPT_EMAIL: "{{email}}"
    volumes: "{{plex_volumes + docker_volumes.plex|default([])}}"
    restart_policy: always
    devices: "{{ '/dev/dri:/dev/dri' if plex.hw_transcode == 'True' | default(false) else omit }}"
    networks:
      - name: cloudbox
        ipv4_address: 172.18.0.15
        aliases:
          - plex
    etc_hosts: >
     {
      "metrics.plex.tv": "127.0.0.1",
     }
    state: started

# we need this here because sometimes after a restore, docker will set this transcodes folder to root, dont ask why, but it does...
- name: "Wait 5 seconds, then ensure {{plex.transcodes}} has the correct permissions"
  wait_for:
    timeout: 5

- name: "Ensure transcodes folder has the correct permissions"
  file:
    path: "{{plex.transcodes}}"
    owner: "{{user}}"
    group: "{{user}}"
    mode: 0775
    recurse: true

- name: Check WebTools exists
  stat:
    path: "{{mnt.docker_data}}/plex/Library/Application Support/Plex Media Server/Plug-ins/WebTools.bundle"
  register: webtools_bundle

- name: Wait for Plug-ins folder to be created by Plex
  wait_for:
    path: "{{mnt.docker_data}}/plex/Library/Application Support/Plex Media Server/Plug-ins"
    state: present
  when: webtools_bundle.stat.exists == False

- name: Install WebTools
  unarchive:
    src: https://github.com/ukdtom/WebTools.bundle/releases/download/2.4.1/WebTools.bundle.zip
    dest: "{{mnt.docker_data}}/plex/Library/Application Support/Plex Media Server/Plug-ins"
    copy: no
    owner: "{{user}}"
    group: "{{user}}"
    mode: 0775
  when: webtools_bundle.stat.exists == False

- name: add container to inventory
  add_host:
    name: plex
    ansible_connection: docker
  changed_when: false
  when: plex.hw_transcode == "True"

- name: run command in container
  delegate_to: plex
  raw: |
    echo {{plex.hw_transcode_v}}>/version.txt
    curl -J -L -o /tmp/mediaserver.deb https://downloads.plex.tv/plex-media-server/{{plex.hw_transcode_v}}/plexmediaserver_{{plex.hw_transcode_v}}_amd64.deb
    dpkg -i /tmp/mediaserver.deb
  when: plex.hw_transcode == "True" 
  register: phw

- name: Restart plex docker container
  shell: "docker restart plex"
  ignore_errors: yes
  when: phw.changed
